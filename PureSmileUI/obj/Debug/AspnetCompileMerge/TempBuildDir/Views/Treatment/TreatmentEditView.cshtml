@model PureSmileUI.Models.Dto.TreatmentEditItem

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="page-head">
    <h2 class="pull-left">
        @if (Model.Id == 0)
        {
            @("Create treatment");
        }
        else
        {
            @("Edit treatment \"" + Model.Name + "\"");
        }
    </h2>
    <div class="clearfix"></div>
</div>
<div class="matter">
    @using (Html.BeginForm("Edit", "Treatment", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.TreatmentCategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.TreatmentCategoryId, new SelectList(Model.TreatmentCategoryList, "Id", "Name"),
                    new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.PictureUrl, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="controls clearfix">
                <span class="btn btn-primary btn-file" onclick="$(this).next().click();">
                  <i class="ui-icon-circle-pluss"></i> <span class="name">Choose picture...</span>
                </span><input type="file" name="files" id="files" style="display: none;" onchange="$(this).prev().find('.name').text($(this).val());" />
              </div>
              @if (!string.IsNullOrEmpty(Model.PictureUrl))
              {
                if (Model.PictureUrl.IndexOf("://") == -1)
                {
                  if (File.Exists(Server.MapPath("~"+Model.PictureUrl)))
                  {
                    <img style="max-width: 400px; max-height: 300px; margin-left: 100px;" alt="" src="@(Href("~" + Model.PictureUrl))"/>
                  }
                }
                else
                {
                  <img style="max-width: 400px; max-height: 300px; margin-left: 100px;" alt="" src="@Model.PictureUrl" />
                }
              }
              @Html.HiddenFor(model => model.PictureUrl)
            </div>

            <div class="form-group">
                <label class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input type="submit" class="btn btn-sm btn-primary" value="Save">
                    <span></span>
                    @if (Model.HasBookings)
                    {
                      @Html.ActionLink("Delete", null, null, new {@class = "btn btn-sm btn-info", disabled = "disabled", title = "Unable to delete. Some bookings have this treatment setted.", onclick = "return false;" })
                    }
                    else
                    {
                      @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "btn btn-sm btn-info" })
                    }
                    <span></span>
                    @Html.ActionLink("Cancel", "Cancel", new { id = Model.Id }, new { @class = "btn btn-sm btn-default" })
                </div>
            </div>
        </div>
    }
</div>