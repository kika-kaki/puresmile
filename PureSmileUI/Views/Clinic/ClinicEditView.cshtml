@model PureSmileUI.Models.Dto.ClinicEditItem

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@section Scripts
{
    <script src="@Url.Content("~/AppScripts/clinicEdit.js")"></script>
}
<div class="page-head">
    <h2 class="pull-left">
        @if (Model.Id == 0)
        {
            @("Create clinic");
        }
        else
        {
            @("Edit clinic \"" + Model.BusinessName + "\"");
        }
    </h2>
    <div class="clearfix"></div>
</div>
@using (Html.BeginForm("Save", "Clinic", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
  @Html.ValidationSummary(false, "", new {@class = "text-danger"})
  @Html.HiddenFor(model => model.Id, new {@id = "clinicId"})

  <div class="form-group">
    <div class="col-lg-8">
      <div class="widget">
        <div class="widget-head">
          <div class="pull-left">Business details</div>
          <div class="clearfix"></div>
        </div>
        <div class="widget-content">
          <div class="padd">
            <div class="form-group">
              @Html.LabelFor(model => model.Id, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new {htmlAttributes = new {@class = "form-control", disabled = "disabled", type = "text"}})
              </div>
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.BusinessName, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.BusinessName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BusinessName, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.LocationName, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.LocationName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LocationName, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.ABN, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.ABN, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ABN, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.OwnersName, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.OwnersName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.OwnersName, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.OwnersEmailAddress, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.OwnersEmailAddress, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.OwnersEmailAddress, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.OwnersPhoneNumber, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.OwnersPhoneNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.OwnersPhoneNumber, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.BusinessWebsiteAddress, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.BusinessWebsiteAddress, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BusinessWebsiteAddress, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.EmailAddressForOnlineBookings, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddressForOnlineBookings, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.EmailAddressForOnlineBookings, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.IsActive, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                <div class="checkbox">
                  @Html.EditorFor(model => model.IsActive)
                  @Html.ValidationMessageFor(model => model.IsActive, "", new {@class = "text-danger"})
                </div>
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.Address, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Address, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.City, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.City, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.City, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.State, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.State, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.State, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.Phone, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Phone, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.WorkHours, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.WorkHours, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.WorkHours, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
              </div>
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.ContactPerson, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ContactPerson, "", new {@class = "text-danger"})
              </div>
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.Location, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Location, "", new {@class = "text-danger"})
              </div>
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.Comments, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.Comments, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Comments, "", new {@class = "text-danger"})
              </div>
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.ContractFileContent, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                <input type="file" name="somename" id="file">
              </div>
            </div>
            <div class="form-group">
              @Html.Label(" ", htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @if (!string.IsNullOrEmpty(Model.ContractFileName))
                {
                  <text>
                    @Html.ActionLink(Model.ContractFileName, "DownloadContract", new {clinicId = @Model.Id})
                  </text>
                }
              </div>
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.Lat, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.Lat, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Lat, "", new { @class = "text-danger" })
              </div>
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.Lng, htmlAttributes: new { @class = "control-label col-md-2" })
              <div class="col-md-10">
                @Html.EditorFor(model => model.Lng, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lng, "", new { @class = "text-danger" })
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="form-group">
    <div class="col-lg-8">
      <div class="widget">
        <div class="widget-head">
          <div class="pull-left">Website listing</div>
          <div class="clearfix"></div>
        </div>
        <div class="widget-content">
          <div class="padd">
            <div class="form-group">
              @Html.LabelFor(model => model.WebsiteLocationAddress, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.EditorFor(model => model.WebsiteLocationAddress, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.WebsiteLocationAddress, "", new {@class = "text-danger"})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.HowToFind, htmlAttributes: new {@class = "control-label col-md-2"})
              <div class="col-md-10">
                @Html.TextAreaFor(model => model.HowToFind, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.HowToFind, "", new {@class = "text-danger"})
              </div>
            </div>

            <h3>Opening hours</h3>
            <table id="myDataTable" class="table table-striped table-bordered table-hover">
              <thead>
                <tr>
                  <th>Day</th>
                  <th>Open</th>
                  <th>Close</th>
                </tr>
              </thead>
              <tbody>
                @for (int i = 0; i < Model.OpeningHours.Count; i++)
                {
                <tr id="@Model.OpeningHours[i].Id">
                  <td contenteditable="false" hidden="hidden">@Html.EditorFor(modelItem => Model.OpeningHours[i].Day)</td>
                  <td contenteditable="false">@Html.DisplayFor(modelItem => Model.OpeningHours[i].DayName)</td>
                  <td contenteditable="false">@Html.EditorFor(modelItem => Model.OpeningHours[i].OpenHour, new { htmlAttributes = new { @class = "form-control" } })</td>
                  <td contenteditable="false">@Html.EditorFor(modelItem => Model.OpeningHours[i].CloseHour, new { htmlAttributes = new { @class = "form-control" } })</td>
                </tr>
                }
              </tbody>
            </table>

            <h3>Booking opening hours</h3>
            <table id="myDataTable" class="table table-striped table-bordered table-hover">
              <thead>
              <tr>
                <th>Day</th>
                <th>Open</th>
                <th>Close</th>
              </tr>
              </thead>
              <tbody>
              @for (int i = 0; i < Model.OpeningHours.Count; i++)
              {
                <tr id="@Model.OpeningHours[i].Id">
                  <td contenteditable="false" hidden="hidden">@Html.EditorFor(modelItem => Model.OpeningHours[i].Day)</td>
                  <td contenteditable="false">@Html.DisplayFor(modelItem => Model.OpeningHours[i].DayName)</td>
                  <td contenteditable="false">@Html.EditorFor(modelItem => Model.OpeningHours[i].BookingOpenHour, new { htmlAttributes = new { @class = "form-control" } })</td>
                  <td contenteditable="false">@Html.EditorFor(modelItem => Model.OpeningHours[i].BookingCloseHour, new { htmlAttributes = new { @class = "form-control" } })</td>
                </tr>
              }
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="form-group">
    <div class="col-lg-8">
      <div class="widget">
        <div class="widget-head">
          <div class="pull-left">Banking details</div>
          <div class="clearfix"></div>
        </div>
        <div class="widget-content">
          <div class="padd">
            <div class="form-group">
              @Html.LabelFor(model => model.BankAccountName, htmlAttributes: new {@class = "control-label col-md-3"})
              <div class="col-md-9">
                @Html.EditorFor(model => model.BankAccountName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BankAccountName, "", new {@class = "text-danger"})
              </div>
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.BankBsb, htmlAttributes: new {@class = "control-label col-md-3"})
              <div class="col-md-9">
                @Html.EditorFor(model => model.BankBsb, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BankBsb, "", new {@class = "text-danger"})
              </div>
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.BankAccountNumber, htmlAttributes: new {@class = "control-label col-md-3"})
              <div class="col-md-9">
                @Html.EditorFor(model => model.BankAccountNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BankAccountNumber, "", new {@class = "text-danger"})
              </div>
            </div>
            <div class="form-group">
              @Html.LabelFor(model => model.PaymentRatio, htmlAttributes: new {@class = "control-label col-md-3"})
              <div class="col-md-3" style="padding-right: 0;">
                @Html.EditorFor(model => model.PaymentRatio, new
                {
                  htmlAttributes = new
                  {
                    @class = "form-control",
                    @onchange = "onRatioChanged()",
                    @id = "txtRatio"
                  }
                })
              </div>
              <div class="col-md-3" style="padding:5px 0 0 0;">
                % <span id="paymentRatioDiff">0</span>%
              </div>
              <div class="col-md-9">
                @Html.ValidationMessageFor(model => model.PaymentRatio, "", new {@class = "text-danger"})
              </div>
            </div>
          </div>
          <div class="widget-foot">
            <!-- Footer goes here -->
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="form-group">
    <div class="col-lg-8">
      <div class="widget">
        <div class="widget-head">
          <div class="pull-left">New location onboarding checklist</div>
          <div class="clearfix"></div>
        </div>
        <div class="widget-content">
          <div class="padd">
            <div class="form-group">
              @Html.LabelFor(model => model.IsContractSigned, htmlAttributes: new {@class = "control-label col-md-3"})
              <div class="col-md-9">
                @Html.EditorFor(model => model.IsContractSigned, new {htmlAttributes = new {@class = "form-control"}})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.IsTrained, htmlAttributes: new {@class = "control-label col-md-3"})
              <div class="col-md-9">
                @Html.EditorFor(model => model.IsTrained, new {htmlAttributes = new {@class = "form-control"}})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.IsLocationsDetailsSpreadsheetsCompleted, htmlAttributes: new {@class = "control-label col-md-3"})
              <div class="col-md-9">
                @Html.EditorFor(model => model.IsLocationsDetailsSpreadsheetsCompleted, new {htmlAttributes = new {@class = "form-control"}})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.IsTakenClientThroughWholesale, htmlAttributes: new {@class = "control-label col-md-3"})
              <div class="col-md-9">
                @Html.EditorFor(model => model.IsTakenClientThroughWholesale, new {htmlAttributes = new {@class = "form-control"}})
              </div>
            </div>

            <div class="form-group">
              @Html.LabelFor(model => model.IsClientWholesaleLoginSetuped, htmlAttributes: new { @class = "control-label col-md-3" })
              <div class="col-md-9">
                @Html.EditorFor(model => model.IsClientWholesaleLoginSetuped, new { htmlAttributes = new { @class = "form-control" } })
              </div>
            </div>
          </div>
          <div class="widget-foot">
            <!-- Footer goes here -->
          </div>
        </div>
      </div>
    </div>
  </div>

    <div class="form-group">
        <div class="col-lg-8">
            <div class="widget">
                <div class="widget-head">
                    <div class="pull-left">Treatment categories</div>
                    <div class="clearfix"></div>
                </div>
                <div class="widget-content">
                    <div class="padd">
                            @for (int i = 0; i < Model.IndicatedTreatmentCategories.Count; i++)
                            {
                                
                                <div>
                                    @Html.HiddenFor(x => x.IndicatedTreatmentCategories[i].Id)
                                    @Html.CheckBoxFor(x => x.IndicatedTreatmentCategories[i].IsActive)
			                        @Html.LabelFor(x => x.IndicatedTreatmentCategories[i].IsActive, Model.IndicatedTreatmentCategories[i].Name)
                                </div>
		                    }
                       
                    </div>
                    <div class="widget-foot">
                        <!-- Footer goes here -->
                    </div>
                </div>
            </div>
        </div>
    </div>

  <div class="form-group">
    <label class="col-md-2 control-label"></label>
    <div class="col-md-10">
      <input type="submit" class="btn btn-sm btn-primary" value="Save" id="btnSave">
      <span></span>
      @if (Model.HasBookings)
      {
        @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "btn btn-sm btn-info", disabled = "disabled", title = "Unable to delete. Clinic has some bookings.", onclick = "return false;" })
      }
      else
      {
        @Html.ActionLink("Delete", "Delete", new {id = Model.Id}, new {@class = "btn btn-sm btn-info"})
      }
      <span></span>
      @Html.ActionLink("Cancel", "Cancel", new {id = Model.Id}, new {@class = "btn btn-sm btn-default"})
    </div>
  </div>
  </div>
}